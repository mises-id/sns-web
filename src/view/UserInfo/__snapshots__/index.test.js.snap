// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserInfo should render correctly 1`] = `
<div>
  <Navbar
    title="userInfoPageTitle"
  />
  <div
    className="m-layout m-bg-f8f8f8 userinfo"
  >
    <ForwardRef
      footer={
        <div
          className="m-padding20 save-box"
        >
          <ForwardRef
            block={true}
            color="primary"
            fill="outline"
            onClick={[Function]}
            shape="rounded"
          >
            Preview
          </ForwardRef>
          <ForwardRef
            block={true}
            className="m-margin-top10"
            color="primary"
            loading={false}
            onClick={[Function]}
            shape="rounded"
          >
            apply
          </ForwardRef>
        </div>
      }
      layout="horizontal"
      name="form"
      onFinish={[Function]}
    >
      <FormItem
        arrow={true}
        label="avatar"
      >
        <div
          className="m-position-relative avatar-container"
          onClick={[Function]}
        >
          <input
            accept="image/png,image/jpeg"
            className="avatar-input hidden"
            onChange={[Function]}
            type="file"
          />
          <NFTAvatar
            size="35px"
          />
        </div>
      </FormItem>
      <FormItem
        arrow={true}
        label="username"
        name="username"
      >
        <ForwardRef
          placeholder="placeholder"
          style={
            Object {
              "--font-size": "14px",
              "--text-align": "right",
            }
          }
        />
      </FormItem>
      <FormItem
        arrow={true}
        label="gender"
        name="gender"
        onClick={[Function]}
      >
        <ForwardRef
          placeholder="placeholder"
          readOnly={true}
          style={
            Object {
              "--font-size": "14px",
              "--text-align": "right",
            }
          }
        />
      </FormItem>
      <FormItem
        arrow={true}
        label="phone"
        name="mobile"
      >
        <ForwardRef
          placeholder="phonePlaceholder"
          style={
            Object {
              "--font-size": "14px",
              "--text-align": "right",
            }
          }
        />
      </FormItem>
      <FormItem
        arrow={true}
        label="mail"
        name="email"
      >
        <ForwardRef
          placeholder="emailPlaceholder"
          style={
            Object {
              "--font-size": "14px",
              "--text-align": "right",
            }
          }
        />
      </FormItem>
      <FormItem
        arrow={true}
        className="intro"
        label="intro"
        name="intro"
      >
        <ForwardRef
          autoSize={
            Object {
              "maxRows": 5,
              "minRows": 3,
            }
          }
          defaultValue=""
          placeholder="introPlaceholder"
          rows={2}
          showCount={false}
          style={
            Object {
              "--font-size": "14px",
              "--text-align": "right",
            }
          }
        />
      </FormItem>
    </ForwardRef>
  </div>
  <Modal
    animationDuration={200}
    animationType="slideUp"
    closable={false}
    destroy={true}
    footer={
      <React.Fragment>
        <div
          className="m-flex-1 m-padding-lr10"
        >
          <ForwardRef
            block={true}
            color="primary"
            fill="outline"
            onClick={[Function]}
            shape="rounded"
            size="middle"
          >
            cancel
          </ForwardRef>
        </div>
        <div
          className="m-flex-1 m-padding-lr10"
        >
          <ForwardRef
            block={true}
            color="primary"
            loading={false}
            onClick={[Function]}
            shape="rounded"
            size="middle"
          >
            send
          </ForwardRef>
        </div>
      </React.Fragment>
    }
    hasFooter={true}
    mask={true}
    maskClosable={true}
    maskType="normal"
    prefixCls="za-modal"
    shape="radius"
    visible={false}
    width="83%"
  >
    <ForwardRef
      aspectRatio={1}
      guides={false}
      initialAspectRatio={1}
      minContainerHeight={300}
      minCropBoxHeight={100}
      minCropBoxWidth={100}
      onInitialized={[Function]}
      src=""
      style={
        Object {
          "height": 400,
          "width": "100%",
        }
      }
      viewMode={1}
    />
  </Modal>
  <Picker
    columns={
      Array [
        Array [
          Object {
            "label": "female",
            "value": "female",
          },
          Object {
            "label": "male",
            "value": "male",
          },
          Object {
            "label": "other",
            "value": "other",
          },
        ],
      ]
    }
    onCancel={[Function]}
    onConfirm={[Function]}
    value={
      Array [
        undefined,
      ]
    }
    visible={false}
  />
  <ForwardRef(forwardRef)
    actions={
      Array [
        Object {
          "onClick": [Function],
          "text": "Avatar",
        },
        Object {
          "onClick": [Function],
          "text": "Avatar-NFT",
        },
      ]
    }
    onCancel={[Function]}
    onMaskClick={[Function]}
    spacing={true}
    visible={false}
  />
  <Popup
    bodyStyle={
      Object {
        "borderTopLeftRadius": "10px",
        "borderTopRightRadius": "10px",
      }
    }
    visible={false}
  >
    <NavBar
      backArrow={false}
      left={
        <span
          onClick={[Function]}
        >
          cancel
        </span>
      }
      right={
        <div
          style={
            Object {
              "display": "inline-block",
              "width": "61px",
            }
          }
        >
          <ForwardRef
            color="primary"
            onClick={[Function]}
            shape="rounded"
            size="small"
          >
            done
          </ForwardRef>
        </div>
      }
    />
    <div
      className="pull-list"
    >
      <ForwardRef(PullList)
        data={Array []}
        emptyText="NFTEmpty"
        load={[Function]}
        renderView={[Function]}
      />
    </div>
  </Popup>
</div>
`;
